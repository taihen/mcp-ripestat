name: Lint

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read
  security-events: write

jobs:
  super-linter:
    name: Super-Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Super-Linter
        uses: super-linter/super-linter@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_MARKDOWN: true
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_BASH: true
          VALIDATE_DOCKERFILE: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GITATTRIBUTES: true

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: "v1.59"
          skip-cache: true

  govulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Run govulncheck
        uses: golang/govulncheck-action@v1

  codeql:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:go"
